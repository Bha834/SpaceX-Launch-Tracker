pipeline {
  agent any
  environment {
    AWS_REGION = 'ap-south-1'         // change if needed
    ECR_REPO = '123456789012.dkr.ecr.ap-south-1.amazonaws.com/spacex-app' // replace
    IMAGE_TAG = "${env.BUILD_NUMBER}"
  }
  stages {
    stage('Checkout') {
      steps { checkout scm }
    }
    stage('Build') {
      steps {
        dir('app') {
          sh 'docker build -t spacex-app:${IMAGE_TAG} .'
        }
      }
    }
    stage('Test') {
      steps {
        // optional unit tests
        echo "Run tests here"
      }
    }
    stage('Push to ECR') {
      steps {
        withCredentials([[
          $class: 'AmazonWebServicesCredentialsBinding',
          credentialsId: 'aws-creds' // create this credential in Jenkins
        ]]) {
          sh '''
            aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_REPO%/*}
            docker tag spacex-app:${IMAGE_TAG} ${ECR_REPO}:${IMAGE_TAG}
            docker push ${ECR_REPO}:${IMAGE_TAG}
          '''
        }
      }
    }
    stage('Trigger Deploy') {
      steps {
        // SSH to control node or call an API to trigger Ansible
        sh "ssh -o StrictHostKeyChecking=no ubuntu@<APP_PUBLIC_IP> 'docker pull ${ECR_REPO}:${IMAGE_TAG} && docker stop spacex || true && docker rm spacex || true && docker run -d --name spacex -p 5000:5000 ${ECR_REPO}:${IMAGE_TAG}'"
      }
    }
  }
}
